process ProcessOne = {

 service = MessageLogger {
    untracked vstring destinations = {"cout"}
    untracked PSet cout = {
      untracked  PSet default = { untracked int32 limit = 0 }
    }
 }

# Empty event source
#     untracked PSet maxEvents = {untracked int32 input = 1}	
     source = EmptyIOVSource {
         string timetype = "runnumber"
         uint64 firstValue = 1
         uint64 lastValue = 1
         uint64 interval = 1
       }


   // Database output service

   include "CondCore/DBCommon/data/CondDBCommon.cfi"
# to write in sqlite
   replace CondDBCommon.connect = "sqlite_file:calibmatrix.db"
   replace CondDBCommon.catalog = "file:PoolFileCatalog_calibmatrix.xml"

# to write into int2r_orcoff
#    replace CondDBCommon.connect = "oracle://cms_orcoff_int2r/CMS_COND_CSC"
#    replace CondDBCommon.catalog = "relationalcatalog_oracle://cms_orcoff_int2r/CMS_COND_GENERAL"
#    replace CondDBCommon.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"

   service = PoolDBOutputService {
       using CondDBCommon
       VPSet toPut = { { string record = "CSCNoiseMatrixRcd" string tag = "CSCNoiseMatrix_ideal" } }
   }


es_source = CSCFakeNoiseMatrixConditions{}
es_prefer = CSCFakeNoiseMatrixConditions{}

module WriteInDB = WriteNoiseMatrixToDB{
   string NewTagRequest = "CSCNoiseMatrixRcd"
}

 path p = {WriteInDB}
}
