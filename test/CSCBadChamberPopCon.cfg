process ProcessOne = {
 service = MessageLogger {
    untracked vstring destinations = {"cout"}
    untracked PSet cout = {
      untracked  PSet default = { untracked int32 limit = 0 }
    }
 }

//Subproject specific modules
     source = EmptyIOVSource {
         string timetype = "runnumber"
	 #change the firstRun if you want a different IOV
         uint64 firstValue = 1
         uint64 lastValue = 1
         uint64 interval = 1
       }

//PopCon config
include "CondCore/DBCommon/data/CondDBCommon.cfi"
// eg to write the objects in sqlite
 replace CondDBCommon.connect = "sqlite_file:BadChambers.db"
// eg to write payload to the oracle database 
//   replace CondDBCommon.connect = "oracle://cms_orcoff_prep/CMS_COND_CSC"
   replace CondDBCommon.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"

// Database output service
   service = PoolDBOutputService{
       using CondDBCommon
       VPSet toPut = { { string record = "CSCBadChambersRcd" string tag = "CSCBadChambers_realCal" } }
       untracked string logconnect = "sqlite_file:badChamberslog.db" 
   }


//Common parameters to all subprojects
module WriteBadChambersWithPopCon = CSCBadChambersPopConAnalyzer{
   string record = "CSCBadChambersRcd"
   untracked bool loggingOn = True
   bool SinceAppendMode = true
   PSet Source= {}
}
 path p = {WriteBadChambersWithPopCon}
}

